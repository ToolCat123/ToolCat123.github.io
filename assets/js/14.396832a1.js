(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{504:function(n,s,a){"use strict";a.r(s);var e=a(4),t=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"js随笔"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js随笔"}},[n._v("#")]),n._v(" JS随笔")]),n._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('paseInt(a,进制) 先转化为字符串再转数字    从第一个数字开始保留到连续数字末尾\n0x  表示16进制\n0   表示8进制\n0b  表示二进制\n&&  第1个为false   返回第1个\n||  第1个为true    返回第1个\n字符串比较大小 是Unicode编码比较 一位以为逐个比较 第一位相同比较下一位(英文排序) 比较字符串数字类型,一定要转型+\n\\uXXXX  JS中使用Unicode(16进制编码)\n&#10进制编码; 网页要用符号时\nNaN == NaN  为false isNaN()判断\nobject["属性名"] = 属性值   操作对象属性\n"属性名" in 对象    检查对象是否有该属性\ntypeOf obj 检查类型 \n对象 instanceOf 类(Person)  检查对象是否是类的实例\n对象.hasOwnProperty("属性名")   检查对象自身是否含有该属性,排除了构造函数中prototype(原型对象) 该方法是原型对象的原型对象(object的proto属性默认为null)\nfor(let index in items){} for(let item/[key,value] of items/map){}\nfunction 函数名(){} 声明函数会在所有代码执行前被创建\nvar fun = new function(){}  使用var关键词声明变量或者函数会提前创建但不会赋值\n函数中的var变量作用于函数内部,函数结束销毁 没有用var就时全局变量\n函数形参就相当于再函数内部var一个变量\n调用函数时,浏览器会传递连个隐含的参数\n    函数上下文对象this\n    封装实参对象arguments 类数组,但不是数组,有索引和长度 .callee == 当前函数对象\nthis\n    函数形式调用时,window\n    方法形式调用时,对象\n    构造函数形式调用时,创建的对象\n    call(),apply(),传入的对象\nfun.call(value,item...)和apply(value,[]) 可以指定为第一个参数  立即调用函数\nbind(value,item...) 绑定this后不会立即执行 返回该函数 需要调用时加()  \n工厂创建的对象为object 构造(new)函数创建的对象是类对象\nprototype 创建一个函数,解析器会向函数中添加一个prototype属性,类型是object 对象可以通过__proto__来访问属性\narray.unshift("属性") 向前加元素 push() 向后加 pop和shift返回被删除的元素\narray.forEach(function(value,index,array对象)){} 不兼容IE8\narray.slice(starIndex,endIdenx) 第二个参数可选 返回新的数组 不影响原数组\narray.splice(starIndex,lenth,item...)   返回删除元素 影响原数组 添加元素\narray.concat(arr1,arr2,item...) 合并多个数组 返回新数组 不影响原数组\narray.join("符号")  返回一个字符串使用指定字符连接元素 默认"," 不影响原数组\narray.sort(function(a,b){return a-b}) 升序(默认) b-a(降序)\nstring.splice(/[a-z]/i) 根据字母拆分字符串\nstring.match(/[a-z]/ig) 选择字符串中所有字母 i忽略大小写 g全匹配\nstring.replace(/[a-z]/ig,"")   清空所有字母\nstring.search(/a[1,2]c/)    字符串中是否含有 a1c a2c\nES6\n    1.Object.create(原型对象,[扩展属性])\n        writable 是否可修改\n        configurable 是否可删除\n        enumerable 是否可迭代 for in枚举\n    2.Object.defineProperty(原型对象,[需要修改的扩展属性])\n    3.const 不可改变的常量 let 局部变量 var 全局变量\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);